/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

Uinlet          (10 0 0);

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    y0
    {
        type            atmBoundaryLayerInletVelocity;
        flowDir         (0 1 0);         // Wind direction along the y-axis
        zDir            (0 0 1);         // z-axis is vertical
        Uref            7.5;             // Reference velocity at reference height
        Zref            11.95;            // Reference height (10 meters)
        z0              uniform 0.2;     // Roughness length (0.2 meters)
        d               uniform 0.0;     // Displacement height (0 meters)
        kappa           0.41;            // Von Karman constant
        Cmu             0.09;            // Turbulence model constant
        initABL         true;            // Initialize the ABL
        phi             phi;             // Name of the flux field
        C1              0.0;             // Optional constant (typically used for custom adjustments)
        C2              1.0;             // Optional constant (typically used for custom adjustments)
        value           uniform (0 7.5 0);    // Initial value, used when initABL=false
	zGround         1.95;              // Ground level (BOUNDING BOX LOEWST Z HEIGHT)
    }

    y1
    {
        type            pressureInletOutletVelocity;
        value           uniform (0 0 0);
    }

    terrain
    {
        type            noSlip;
    }

    x0
    {
        type            symmetry;
    }

    x1
    {
        type            symmetry;
    }

    sky
    {
        type            symmetry;
    }

    Buildings
    {
        type            noSlip;
    }

    #includeEtc "caseDicts/setConstraintTypes"
}

// ************************************************************************* //
